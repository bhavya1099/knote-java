# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=9adbc3cb1f
# ROOST_METHOD_SIG_HASH=b70f07ae36
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Selecting a broadband package based on availability',
#     steps: 'Given "John Doe" received the broadband availability report\n' +
#       'And he finds that "BL_1000MB" broadband speed is available at his address\n' +
#       'When John selects the "BL_1000MB" package\n' +
#       'Then the system should validate the selection\n' +
#       "And confirm the broadband package for John's address",
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Check broadband service availability and selection

  Background:
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_URL = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_URL'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_URL', 'http://localhost:4010')
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN', 'Bearer_Dummy_Token')
    * url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL

  Scenario: Selecting a broadband package based on availability
    Given path '/availabilityCheck'
    And request
      """
      { customer: "John Doe", address: "123 Main St" }
      """
    And header Authorization = RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN
    When method post
    Then status 200
    And match response ==
      """
      {
        control: '#object',
        'control.type': '#string',
        'control.message': '#string',
        'control.code': '#string',
        resource: {
          resource: {
            inventoryId: '#number',
            maxBandwidth: '#number',
            availabilityType: '#number',
            availabilityCode: '#number',
            availabilityDescription: '#string',
            products: '#object'
          }
        }
      }
      """

  Scenario: Selecting a broadband package with invalid data
    Given path '/availabilityCheck'
    And request
      """
      { customer: "", address: "" }
      """
    And header Authorization = RESOURCEPOOLMANAGEMENT_DB0413CB31_AUTH_TOKEN
    When method post
    Then status 400
    And match response ==
      """
      {
        type: '#string',
        message: '#string',
        code: '#string'
      }
      """

  Scenario: Unauthorized access attempt
    Given path '/availabilityCheck'
    And request
      """
      { customer: "John Doe", address: "123 Main St" }
      """
    And header Authorization = 'InvalidToken'
    When method post
    Then status 401
    And match response ==
      """
      {
        type: '#string',
        message: '#string',
        code: '#string'
      }
      """
