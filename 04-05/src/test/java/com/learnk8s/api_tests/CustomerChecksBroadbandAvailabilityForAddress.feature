# ********RoostGPT********

# Test generated by RoostGPT for test integration-scenarioTab-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=dc03be64e0
# ROOST_METHOD_SIG_HASH=3c477b173d
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Customer checks broadband availability for an address',
#     steps: 'Given "John Doe" has a subscriber ID "SVTL001"\n' +
#       'And he wants to check broadband availability for address "14393"\n' +
#       'When John sends a request to check availability\n' +
#       'Then the system should validate the address\n' +
#       'And fetch the broadband availability\n' +
#       'And return a list of available broadband packages',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Check broadband service availability and selection

  Background:
    * def RESOURCEPOOLMANAGEMENT_DB0413CB31_URL = karate.properties['RESOURCEPOOLMANAGEMENT_DB0413CB31_URL'] || karate.get('RESOURCEPOOLMANAGEMENT_DB0413CB31_URL', 'http://localhost:4010')
    * url RESOURCEPOOLMANAGEMENT_DB0413CB31_URL

  Scenario: Customer checks broadband availability for an address with valid input
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '14393' 
      }
      """
    When method post
    Then status 200
    And match response == '#object'
    And match response.control.type == '#string'
    And match response.control.message == '#string'
    And match response.control.code == '#string'
    And match response.resource.resource.inventoryId == '#integer'
    And match response.resource.resource.maxBandwidth == '#integer'
    And match response.resource.resource.availabilityType == '#integer'
    And match response.resource.resource.availabilityCode == '#integer'
    And match response.resource.resource.availabilityDescription == '#string'

  Scenario: Customer checks broadband availability for an address with invalid address
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: 'Invalid123' 
      }
      """
    When method post
    Then status 400
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'

  Scenario: Customer checks broadband availability for an address with unauthorized access
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '14393' 
      }
      """
    When method post
    Then status 401
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'

  Scenario: Customer checks broadband availability for an address with forbidden access
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '14393' 
      }
      """
    When method post
    Then status 403
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'

  Scenario: Customer checks broadband availability for an address not found
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '99999' 
      }
      """
    When method post
    Then status 404
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'

  Scenario: Customer checks broadband availability for an address with server error
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '14393' 
      }
      """
    When method post
    Then status 500
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'

  Scenario: Customer checks broadband availability for an address with service unavailable
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '14393' 
      }
      """
    When method post
    Then status 503
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'

  Scenario: Customer checks broadband availability for an address with gateway timeout
    Given path '/availabilityCheck'
    And request
      """
      { 
        subscriberID: 'SVTL001', 
        address: '14393' 
      }
      """
    When method post
    Then status 504
    And match response.type == '#string'
    And match response.message == '#string'
    And match response.code == '#string'
