# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /availabilityCheck_post for http method type POST 
# RoostTestHash=bc409fdb92
# 
# 

# ********RoostGPT********
Feature: Availability Check API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header Authorization = 'Bearer ' + authToken

  Scenario Outline: Validate Availability Check with Different Inputs
    Given path '/availabilityCheck'
    And request
      """
      <requestBody>
      """
    When method post
    Then status <expectedStatus>
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | read('availabilityCheck_post.csv') |

  Scenario: Unauthorized Access
    Given path '/availabilityCheck'
    And request
      """
      { "customer": { "subscriberId": "SVTL001" }, "address": { "id": 2449 } }
      """
    And header Authorization = 'InvalidToken'
    When method post
    Then status 401

  Scenario: Handle Bad Request
    Given path '/availabilityCheck'
    And request
      """
      { "customer": { "subscriberId": "SVTL001" } }  # Missing address field
      """
    When method post
    Then status 400
    And match response ==
      """
      { "control": { "type": "E", "code": "400", "message": "Complemento obrigatório para o endereço informado." } }
      """
