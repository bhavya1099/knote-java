# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=4992e43bd0
# ROOST_METHOD_SIG_HASH=cb107cc3ec
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Enable WiFi for a new customer',
#     steps: 'Given a new customer with subscriber ID "SVTAL005" has just had their fiber service installed\n' +
#       'When the support representative uses the configuration API to enable WiFi\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should be able to see and connect to their new WiFi network',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "EnableWiFiForNewCustomer.csv"
    fields:
      - "subscriberId"
    skipHeader: true
    delimiter: "^|^"
  environments:
    development:
      target: "http://dev.api.example.com"
    production:
      target: "http://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Enable WiFi for a new customer"
    flow:
      - post:
          url: "/appointment"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            appointment:
              reason: "Enable WiFi for new customer"
              slot:
                id: "bff13821-73c3-42cc-9327-b05c7df5a67f"
          expect:
            - statusCode: 201
            - hasProperty: "appointment"
            - hasProperty: "customer"
          log: "Enabling WiFi for a new customer should return success and customer should see WiFi network."

      - think: 1

      - post:
          url: "/appointmentConfirmation"
          headers:
            Authorization: "Bearer {{ $processControl.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            appointment:
              confirmation: true
              id: "{{ response.body.appointment.id }}"
            customer:
              subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 200
            - hasProperty: "control"
            - hasProperty: "control.message"
            - equals:
                path: "control.code"
                value: "200"
          log: "Confirming WiFi setup for new customer should be successful."
