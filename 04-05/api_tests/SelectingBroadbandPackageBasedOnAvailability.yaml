# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=9adbc3cb1f
# ROOST_METHOD_SIG_HASH=b70f07ae36
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Selecting a broadband package based on availability',
#     steps: 'Given "John Doe" received the broadband availability report\n' +
#       'And he finds that "BL_1000MB" broadband speed is available at his address\n' +
#       'When John selects the "BL_1000MB" package\n' +
#       'Then the system should validate the selection\n' +
#       "And confirm the broadband package for John's address",
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: '{{ $processEnvironment.API_HOST }}'
  phases:
    - duration: 60
      arrivalRate: 1
  processor: ./processors.js
  environments:
    development:
      target: http://dev.api.example.com
    production:
      target: http://api.example.com
  payload:
    path: SelectingBroadbandPackageBasedOnAvailability.csv
    fields:
      - subscriberId
      - addressId
      - complementType
      - complementValue
    skipHeader: true
    delimiter: ^|^
  plugins:
    expect: {}
scenarios:
  - name: Selecting a broadband package based on availability - Success Scenario
    flow:
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/availabilityCheck'
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          json:
            customer:
              subscriberId: '{{ subscriberId }}'
            address:
              id: '{{ addressId }}'
              complement:
                complements:
                  - type: '{{ complementType }}'
                    value: '{{ complementValue }}'
          log: >-
            Posting availability check for John Doe with address ID and
            complement.
          expect:
            - statusCode: 200
            - hasProperty: control
            - hasProperty: resource
          think: 1
      - log: >-
          Expecting successful validation and confirmation of broadband package
          availability.
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/configuration'
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          json:
            configuration:
              action:
                type: HGW_WIFI_CONFIGURATION
                parameters:
                  frequencyBand: 2.4GHz
                  wifiWPAKey: password123
                  wifiIndex: '1'
                  SSID: JohnDoeWiFi
                  passwd: newPassword
                  broadcastSSID: '1'
                  wifiChannel: '6'
                  mode: WPAand11i
              customer:
                subscriberId: '{{ subscriberId }}'
              id: 78c3ad32-6546-427b-9770-5da5f917277f
              adminStatus: '1'
              startDate: '2021-11-25T16:50:39-02'
              endDate: '2021-11-25T17:50:41-02'
              state: FINISHED
          log: >-
            Configuring broadband service for John Doe after successful
            availability check.
          expect:
            - statusCode: 200
            - hasProperty: control
            - hasProperty: configuration
          think: 1
  - name: Selecting a broadband package based on availability - Failure Scenario
    flow:
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/availabilityCheck'
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          json:
            customer:
              subscriberId: invalidID
            address:
              id: invalidAddress
          log: Posting invalid availability check to test error handling.
          expect:
            - statusCode: 400
          think: 1
      - log: Expecting error response for invalid broadband package selection.
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/configuration'
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          json:
            configuration:
              action:
                type: HGW_WIFI_CONFIGURATION
                parameters:
                  frequencyBand: 2.4GHz
                  wifiWPAKey: password123
                  wifiIndex: '1'
                  SSID: JohnDoeWiFi
                  passwd: newPassword
                  broadcastSSID: '1'
                  wifiChannel: '6'
                  mode: WPAand11i
              customer:
                subscriberId: invalidID
              id: invalidConfigId
              adminStatus: '1'
              startDate: '2021-11-25T16:50:39-02'
              endDate: '2021-11-25T17:50:41-02'
              state: REJECTED
          log: >-
            Configuring broadband service with invalid details to test error
            response.
          expect:
            - statusCode: 400
          think: 1
