# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=dc03be64e0
# ROOST_METHOD_SIG_HASH=3c477b173d
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Check broadband service availability and selection',
#   background: 'Background: \n' +
#     '    Given a customer base where each customer has a unique subscriber ID',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Customer checks broadband availability for an address',
#     steps: 'Given "John Doe" has a subscriber ID "SVTL001"\n' +
#       'And he wants to check broadband availability for address "14393"\n' +
#       'When John sends a request to check availability\n' +
#       'Then the system should validate the address\n' +
#       'And fetch the broadband availability\n' +
#       'And return a list of available broadband packages',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "CustomerChecksBroadbandAvailabilityForAddress.csv"
    fields:
      - "subscriberId"
      - "addressId"
    skipHeader: true
    delimiter: "^|^"
  environments:
    development:
      API_HOST: "http://dev.example.com"
      AUTH_TOKEN: "Bearer xxxxxxxxxx"
  plugins:
    expect: {}

scenarios:
  - name: "Customer checks broadband availability for an address"
    flow:
      - post:
          url: "/availabilityCheck"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            customer:
              subscriberId: "{{ subscriberId }}"
            address:
              id: "{{ addressId }}"
          log: "Sending POST request to check broadband availability for customer with ID {{ subscriberId }} and address ID {{ addressId }}"
          expect:
            - statusCode: 200
            - hasProperty: "control"
            - hasProperty: "resource"
            - hasProperty: "resource.resource"
            - hasProperty: "resource.resource.inventoryId"
            - hasProperty: "resource.resource.maxBandwidth"
            - hasProperty: "resource.resource.availabilityType"
            - hasProperty: "resource.resource.availabilityCode"
            - hasProperty: "resource.resource.availabilityDescription"
            - hasProperty: "resource.resource.products"
          think: 1
      - post:
          url: "/availabilityCheck"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            customer:
              subscriberId: "invalidID"
            address:
              id: "99999"
          log: "Sending POST request with invalid subscriber ID to check broadband availability"
          expect:
            - statusCode: 400
            - hasProperty: "control"
            - hasProperty: "control.type"
            - hasProperty: "control.message"
            - hasProperty: "control.code"
          think: 1
